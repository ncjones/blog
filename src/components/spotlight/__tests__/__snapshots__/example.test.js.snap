// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`example.astro > renders about page 1`] = `
"<html lang="en" class="h-full antialiased">
<head>
<meta charSet="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>About â€’ Nathan on Software</title>
<meta name="description" content="I'm Spencer Sharp. I live in New York City, where I design the future.">
<link rel="alternate" type="application/rss+xml" href="rss.xml">
<link rel="icon" href="/favicon-32x32.png" type="image/png" sizes="32x32">
</head>
<body class="flex h-full bg-zinc-50 dark:bg-black">
<div class="flex w-full">
<div class="fixed inset-0 flex justify-center sm:px-8">
<div class="flex w-full max-w-7xl lg:px-8">
<div class="w-full bg-white ring-1 ring-zinc-100 dark:bg-zinc-900 dark:ring-zinc-300/20">
</div>
</div>
</div>
<div class="relative flex w-full flex-col">
<header class="pointer-events-none relative z-50 flex flex-none flex-col" style="height:var(--header-height);margin-bottom:var(--header-mb)">
<div class="top-0 z-10 h-16 pt-6" style="position:var(--header-position)">
<div class="sm:px-8 top-(--header-top,--spacing(6)) w-full" style="position:var(--header-inner-position)">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="relative flex gap-4">
<div class="flex flex-1">
<div class="h-10 w-10 rounded-full bg-white/90 p-0.5 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:ring-white/10">
<a aria-label="Home" class="pointer-events-auto" href="/">
<img alt="" fetchPriority="high" width="512" height="512" decoding="async" data-nimg="1" class="rounded-full bg-zinc-100 object-cover dark:bg-zinc-800 h-9 w-9" style="color:transparent" sizes="2.25rem" src="https://www.gravatar.com/avatar/0e976f88026df14e3caf5982df15e64b?s=200&d=identicon">
</a>
</div>
</div>
<div class="flex flex-1 justify-end md:justify-center">
<!-- open menu button -->
<div class="pointer-events-auto md:hidden">
<button id="menuBtn" class="group flex items-center rounded-full bg-white/90 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20" type="button" aria-expanded="false">Menu<svg viewBox="0 0 8 6" aria-hidden="true" class="ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400">
<path d="M1.75 1.75 4 4.25l2.25-2.5" fill="none" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</button>
</div>
<div id="nav" class="hidden pointer-events-auto">
<!-- menu overlay -->
<div class="fixed inset-0 z-50 bg-zinc-800/40 backdrop-blur-xs duration-150 dark:bg-black/80" id="menuOverlay" aria-hidden="true">
</div>
<!-- menu content -->
<div class="fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-white p-8 ring-1 ring-zinc-900/5 duration-150 dark:bg-zinc-900 dark:ring-zinc-800" tabindex="-1" style="--button-width: 88.64999389648438px;">
<div class="flex flex-row-reverse items-center justify-between">
<!-- close menu button -->
<button id="closeBtn" aria-label="Close menu" class="-m-1 p-1" type="button">
<svg viewBox="0 0 24 24" aria-hidden="true" class="h-6 w-6 text-zinc-500 dark:text-zinc-400">
<path d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</button>
<h2 class="text-sm font-medium text-zinc-600 dark:text-zinc-400">Navigation</h2>
</div>
<nav class="mt-6">
<ul class="-my-2 divide-y divide-zinc-100 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300">
<li>
<a class="block py-2" href="/">Articles</a>
</li>
<li>
<a class="block py-2" href="/about">About</a>
</li>
</ul>
</nav>
</div>
</div>
<script type="module" src="/Users/nathan/code/ncjones/blog/src/components/spotlight/MobileNavigation.astro?astro&type=script&index=0&lang.ts">
</script>
<nav class="pointer-events-auto hidden md:block">
<ul class="flex rounded-full bg-white/90 px-3 text-sm font-medium text-zinc-800 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10">
<li>
<a class="relative block px-3 py-2 transition text-teal-500 dark:text-teal-400" href="/">Articles<span class="absolute inset-x-1 -bottom-px h-px bg-linear-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0">
</span>
</a>
</li>
<li>
<a class="relative block px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-400" href="/about">About </a>
</li>
</ul>
</nav>
</div>
<div class="flex justify-end md:flex-1">
<div class="pointer-events-auto">
<!-- Theme select was here. We will just use the OS preference for choosing dark mode. -->
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</header>
<main class="flex-auto">
<div class="sm:px-8 mt-16 sm:mt-32">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="grid grid-cols-1 gap-y-16 lg:grid-cols-2 lg:grid-rows-[auto_1fr] lg:gap-y-12">
<div class="lg:pl-20">
<div class="max-w-xs px-2.5 lg:max-w-none">
<img alt="" loading="lazy" width="800" height="800" decoding="async" data-nimg="1" class="aspect-square rotate-3 rounded-2xl bg-zinc-100 object-cover dark:bg-zinc-800" style="color:transparent" src="/img/workstation-with-coffee-cup.jpg">
</div>
</div>
<div class="lg:order-first lg:row-span-2">
<h1 class="text-4xl font-bold tracking-tight text-zinc-800 sm:text-5xl dark:text-zinc-100">About Me</h1>
<div class="mt-6 space-y-7 text-base text-zinc-600 dark:text-zinc-400">
<p>I am a full stack developer, a software architect, and a leader of software
          engineers. I love designing and building software systems and I'm passionate
          about nurturing teams, processes and culture to do the same.</p>
<p>Since 2006 I have held professional roles where I was responsible for
          delivering enterprise software across many industries including healthcare,
          dairy, tourism, advertising, recruitment, insurance, logistics, and payments.</p>
<p>I have worked with a wide variety of technologies in my professional capacity
          including: back-end systems with JVM, Python and node.js; relational and Nosql
          DBs (including a stint as a a Mongo DBA); infrastructure across multiple cloud
          providers; used a wide variety of browser-based JavaScript and CSS frameworks;
          and worked with a varienty of CI/CD and test automation tools.</p>
<p>In 1996, as a 12 year old, I discovered the thrill of creating something from
          nothing using GOTO statements with MS Basic on my dad's Pentium 100. I'm
          grateful that decades later I'm able to continue to experience this joy and
          share it with others.</p>
<h1 class="text-3xl font-bold tracking-tight text-zinc-800 sm:text-4xl dark:text-zinc-100">About This Blog</h1>
<p>Most of the work building an enterprise software product is within the realm of
        either back-end APIs or front-end user interfaces and collectively this is
        often referred to as "full stack". To me "full stack" is more than this; it
        indicates the ability to deliver a working product as the sole member of a
        technology team.</p>
<p>Besides merely back-end and front-end application development, "full stack"
        also requires some technical ability relating to other dimensions such as
        infrastructure, databases, networking, and deployment tooling. These other
        dimensions, along with the processes we use to manage them, can be collectively
        described as the "glue".</p>
<p>In this blog I intend to share my thoughts about effective patterns for
        building, running and maintaining enterprise software with a focus on the
        "glue" that makes us more effective "full stack" engineers.</p>
</div>
</div>
<div class="lg:pl-20">
<ul role="list">
<li class="flex">
<a href="https://x.com/_ncjones" class="group flex text-sm font-medium text-zinc-800 transition hover:text-teal-500 dark:text-zinc-200 dark:hover:text-teal-500">
<svg viewBox="0 0 24 24" class="h-6 w-6 flex-none fill-zinc-500 transition group-hover:fill-teal-500">
<path d="M13.3174 10.7749L19.1457 4H17.7646L12.7039 9.88256L8.66193 4H4L10.1122 12.8955L4 20H5.38119L10.7254 13.7878L14.994 20H19.656L13.3171 10.7749H13.3174ZM11.4257 12.9738L10.8064 12.0881L5.87886 5.03974H8.00029L11.9769 10.728L12.5962 11.6137L17.7652 19.0075H15.6438L11.4257 12.9742V12.9738Z">
</path>
</svg>
<span class="ml-4">Follow on X</span>
</a>
</li>
<li class="mt-4 flex">
<a href="https://github.com/ncjones" class="group flex text-sm font-medium text-zinc-800 transition hover:text-teal-500 dark:text-zinc-200 dark:hover:text-teal-500">
<svg viewBox="0 0 24 24" aria-hidden="true" class="h-6 w-6 flex-none fill-zinc-500 transition group-hover:fill-teal-500">
<path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.475 2 2 6.588 2 12.253c0 4.537 2.862 8.369 6.838 9.727.5.09.687-.218.687-.487 0-.243-.013-1.05-.013-1.91C7 20.059 6.35 18.957 6.15 18.38c-.113-.295-.6-1.205-1.025-1.448-.35-.192-.85-.667-.013-.68.788-.012 1.35.744 1.538 1.051.9 1.551 2.338 1.116 2.912.846.088-.666.35-1.115.638-1.371-2.225-.256-4.55-1.14-4.55-5.062 0-1.115.387-2.038 1.025-2.756-.1-.256-.45-1.307.1-2.717 0 0 .837-.269 2.75 1.051.8-.23 1.65-.346 2.5-.346.85 0 1.7.115 2.5.346 1.912-1.333 2.75-1.05 2.75-1.05.55 1.409.2 2.46.1 2.716.637.718 1.025 1.628 1.025 2.756 0 3.934-2.337 4.806-4.562 5.062.362.32.675.936.675 1.897 0 1.371-.013 2.473-.013 2.82 0 .268.188.589.688.486a10.039 10.039 0 0 0 4.932-3.74A10.447 10.447 0 0 0 22 12.253C22 6.588 17.525 2 12 2Z">
</path>
</svg>
<span class="ml-4">Follow on GitHub</span>
</a>
</li>
<li class="mt-4 flex">
<a href="https://www.linkedin.com/in/nathan-c-jones/" class="group flex text-sm font-medium text-zinc-800 transition hover:text-teal-500 dark:text-zinc-200 dark:hover:text-teal-500">
<svg viewBox="0 0 24 24" class="h-6 w-6 flex-none fill-zinc-500 transition group-hover:fill-teal-500">
<path d="M18.335 18.339H15.67v-4.177c0-.996-.02-2.278-1.39-2.278-1.389 0-1.601 1.084-1.601 2.205v4.25h-2.666V9.75h2.56v1.17h.035c.358-.674 1.228-1.387 2.528-1.387 2.7 0 3.2 1.778 3.2 4.091v4.715zM7.003 8.575a1.546 1.546 0 01-1.548-1.549 1.548 1.548 0 111.547 1.549zm1.336 9.764H5.666V9.75H8.34v8.589zM19.67 3H4.329C3.593 3 3 3.58 3 4.297v15.406C3 20.42 3.594 21 4.328 21h15.338C20.4 21 21 20.42 21 19.703V4.297C21 3.58 20.4 3 19.666 3h.003z">
</path>
</svg>
<span class="ml-4">Follow on LinkedIn</span>
</a>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</div>
</main>
<footer class="mt-32 flex-none">
<div class="sm:px-8">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="border-t border-zinc-100 pt-10 pb-16 dark:border-zinc-700/40">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="flex flex-col items-center justify-between gap-6 md:flex-row">
<div class="flex flex-wrap justify-center gap-x-6 gap-y-1 text-sm font-medium text-zinc-800 dark:text-zinc-200">
<a class="transition hover:text-teal-500 dark:hover:text-teal-400" href="/">Articles</a>
<a class="transition hover:text-teal-500 dark:hover:text-teal-400" href="/about">About</a>
</div>
<p class="text-sm text-zinc-400 dark:text-zinc-500">Â© 2025 Nathan Jones. All rights reserved.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</footer>
</div>
</div>
</body>
</html>"
`;

exports[`example.astro > renders articles page 1`] = `
"<html lang="en" class="h-full antialiased">
<head>
<meta charSet="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Nathan on Software</title>
<meta name="description" content>
<link rel="alternate" type="application/rss+xml" href="rss.xml">
<link rel="icon" href="/favicon-32x32.png" type="image/png" sizes="32x32">
</head>
<body class="flex h-full bg-zinc-50 dark:bg-black">
<div class="flex w-full">
<div class="fixed inset-0 flex justify-center sm:px-8">
<div class="flex w-full max-w-7xl lg:px-8">
<div class="w-full bg-white ring-1 ring-zinc-100 dark:bg-zinc-900 dark:ring-zinc-300/20">
</div>
</div>
</div>
<div class="relative flex w-full flex-col">
<header class="pointer-events-none relative z-50 flex flex-none flex-col" style="height:var(--header-height);margin-bottom:var(--header-mb)">
<div class="top-0 z-10 h-16 pt-6" style="position:var(--header-position)">
<div class="sm:px-8 top-(--header-top,--spacing(6)) w-full" style="position:var(--header-inner-position)">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="relative flex gap-4">
<div class="flex flex-1">
<div class="h-10 w-10 rounded-full bg-white/90 p-0.5 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:ring-white/10">
<a aria-label="Home" class="pointer-events-auto" href="/">
<img alt="" fetchPriority="high" width="512" height="512" decoding="async" data-nimg="1" class="rounded-full bg-zinc-100 object-cover dark:bg-zinc-800 h-9 w-9" style="color:transparent" sizes="2.25rem" src="https://www.gravatar.com/avatar/0e976f88026df14e3caf5982df15e64b?s=200&d=identicon">
</a>
</div>
</div>
<div class="flex flex-1 justify-end md:justify-center">
<!-- open menu button -->
<div class="pointer-events-auto md:hidden">
<button id="menuBtn" class="group flex items-center rounded-full bg-white/90 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20" type="button" aria-expanded="false">Menu<svg viewBox="0 0 8 6" aria-hidden="true" class="ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400">
<path d="M1.75 1.75 4 4.25l2.25-2.5" fill="none" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</button>
</div>
<div id="nav" class="hidden pointer-events-auto">
<!-- menu overlay -->
<div class="fixed inset-0 z-50 bg-zinc-800/40 backdrop-blur-xs duration-150 dark:bg-black/80" id="menuOverlay" aria-hidden="true">
</div>
<!-- menu content -->
<div class="fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-white p-8 ring-1 ring-zinc-900/5 duration-150 dark:bg-zinc-900 dark:ring-zinc-800" tabindex="-1" style="--button-width: 88.64999389648438px;">
<div class="flex flex-row-reverse items-center justify-between">
<!-- close menu button -->
<button id="closeBtn" aria-label="Close menu" class="-m-1 p-1" type="button">
<svg viewBox="0 0 24 24" aria-hidden="true" class="h-6 w-6 text-zinc-500 dark:text-zinc-400">
<path d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</button>
<h2 class="text-sm font-medium text-zinc-600 dark:text-zinc-400">Navigation</h2>
</div>
<nav class="mt-6">
<ul class="-my-2 divide-y divide-zinc-100 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300">
<li>
<a class="block py-2" href="/">Articles</a>
</li>
<li>
<a class="block py-2" href="/about">About</a>
</li>
</ul>
</nav>
</div>
</div>
<script type="module" src="/Users/nathan/code/ncjones/blog/src/components/spotlight/MobileNavigation.astro?astro&type=script&index=0&lang.ts">
</script>
<nav class="pointer-events-auto hidden md:block">
<ul class="flex rounded-full bg-white/90 px-3 text-sm font-medium text-zinc-800 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10">
<li>
<a class="relative block px-3 py-2 transition text-teal-500 dark:text-teal-400" href="/">Articles<span class="absolute inset-x-1 -bottom-px h-px bg-linear-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0">
</span>
</a>
</li>
<li>
<a class="relative block px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-400" href="/about">About </a>
</li>
</ul>
</nav>
</div>
<div class="flex justify-end md:flex-1">
<div class="pointer-events-auto">
<!-- Theme select was here. We will just use the OS preference for choosing dark mode. -->
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</header>
<main class="flex-auto">
<div class="sm:px-8 mt-16 sm:mt-32">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<header class="max-w-2xl">
<h1 class="text-4xl font-bold tracking-tight text-zinc-800 sm:text-5xl dark:text-zinc-100">Writing on software design, company building, and the aerospace industry.</h1>
<p class="mt-6 text-base text-zinc-600 dark:text-zinc-400">All of my long-form thoughts on programming, leadership, product design, and more, collected in chronological order.</p>
</header>
<div class="mt-16 sm:mt-20">
<div class="md:border-l md:border-zinc-100 md:pl-6 md:dark:border-zinc-700/40">
<div class="flex max-w-3xl flex-col space-y-16">
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/covid-19-reflections.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Reflections on COVID-19 Policies and Public Trust in New Zealand</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2025-04-26">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>Apr 26, 2025</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">My submission to the New Zealand Royal Commission on COVID-19 Lessons
Learned.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2025-04-26">Apr 26, 2025</time>
</article>
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/nvim-lua-plugin-first-reflection.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Lua Newcomer Observations</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2025-04-13">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>Apr 13, 2025</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">Reflection on first attempt at Neovim plugin development with Lua: it&#39;s fun,
object-oriented, and minimal.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2025-04-13">Apr 13, 2025</time>
</article>
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/tidying-first-for-sustainable-software-development.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Tidying First For Sustainable Software Delivery</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2024-12-25">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>Dec 25, 2024</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">Developers have a duty to maintain delivery velocity through code quality.
Tidying first is the key to maintaining code quality.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2024-12-25">Dec 25, 2024</time>
</article>
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/shared-logging-context.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Shared Logging Context</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2024-10-12">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>Oct 12, 2024</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">Shared logging context radically improves the quality of application logs
while reducing developer burden. This can be achieved easily in Node.js using
AsyncLocalStorage.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2024-10-12">Oct 12, 2024</time>
</article>
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/give-your-applications-pet-names.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Give Your Applications Pet Names</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2024-04-29">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>Apr 29, 2024</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">Creating naming schemes for your applications is simple and improves the
quality of communication among developers.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2024-04-29">Apr 29, 2024</time>
</article>
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/nodejs-custom-inspect-uint-arrays.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Custom Inspect for Node.js UInt Arrays</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2024-02-25">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>Feb 25, 2024</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">Adding a [util.inspect.custom] method to Node.js UInt array types is a
simple way to improve debugging experience when dealing with binary data. An
example where this is beneficial is when inspecting Algorand blockchain
transaction details.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2024-02-25">Feb 25, 2024</time>
</article>
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/prod-deploy-day-one.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Prod Deployment on Day One</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2023-06-05">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>Jun 5, 2023</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">Deploying to production on day one is a simple policy that helps teams to
optimize software delivery pipelines. There are several techniques that help
to create a reliable zero-to-production experience for new developers.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2023-06-05">Jun 5, 2023</time>
</article>
<article class="md:grid md:grid-cols-4 md:items-baseline">
<div class="md:col-span-3 group relative flex flex-col items-start">
<h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
<div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-6 sm:rounded-2xl dark:bg-zinc-800/50">
</div>
<a href="/posts/nodejs-stream-composition.md">
<span class="absolute -inset-x-4 -inset-y-6 z-20 sm:-inset-x-6 sm:rounded-2xl">
</span>
<span class="relative z-10">Node.js Stream Composition</span>
</a>
</h2>
<time class="md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5" dateTime="2023-05-26">
<span class="absolute inset-y-0 left-0 flex items-center" aria-hidden="true">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
</span>May 26, 2023</time>
<p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">Node.js pipeline() utility was added in 2018 as a better alternative to
Readable.pipe(). It is not widely used but it&#39;s a great way to create
streaming data applications on Node.js because of better error handling,
cleaner syntax and compatibility with async/await.
</p>
<div aria-hidden="true" class="relative z-10 mt-4 flex items-center text-sm font-medium text-teal-500">Read article<svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-4 w-4 stroke-current">
<path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</div>
</div>
<time class="mt-1 max-md:hidden relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500" dateTime="2023-05-26">May 26, 2023</time>
</article>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</main>
<footer class="mt-32 flex-none">
<div class="sm:px-8">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="border-t border-zinc-100 pt-10 pb-16 dark:border-zinc-700/40">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="flex flex-col items-center justify-between gap-6 md:flex-row">
<div class="flex flex-wrap justify-center gap-x-6 gap-y-1 text-sm font-medium text-zinc-800 dark:text-zinc-200">
<a class="transition hover:text-teal-500 dark:hover:text-teal-400" href="/">Articles</a>
<a class="transition hover:text-teal-500 dark:hover:text-teal-400" href="/about">About</a>
</div>
<p class="text-sm text-zinc-400 dark:text-zinc-500">Â© 2025 Nathan Jones. All rights reserved.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</footer>
</div>
</div>
</body>
</html>"
`;

exports[`example.astro > renders layout + markdown content 1`] = `
"<html lang="en" class="h-full antialiased">
<head>
<meta charSet="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Custom Inspect for Node.js UInt Arrays â€’ Nathan on Software</title>
<meta name="description" content="Adding a [util.inspect.custom] method to Node.js UInt array types is a simple way to improve debugging experience when dealing with binary data. An example where this is beneficial is when inspecting Algorand blockchain transaction details.">
<link rel="alternate" type="application/rss+xml" href="rss.xml">
<link rel="icon" href="/favicon-32x32.png" type="image/png" sizes="32x32">
</head>
<body class="flex h-full bg-zinc-50 dark:bg-black">
<div class="flex w-full">
<div class="fixed inset-0 flex justify-center sm:px-8">
<div class="flex w-full max-w-7xl lg:px-8">
<div class="w-full bg-white ring-1 ring-zinc-100 dark:bg-zinc-900 dark:ring-zinc-300/20">
</div>
</div>
</div>
<div class="relative flex w-full flex-col">
<header class="pointer-events-none relative z-50 flex flex-none flex-col" style="height:var(--header-height);margin-bottom:var(--header-mb)">
<div class="top-0 z-10 h-16 pt-6" style="position:var(--header-position)">
<div class="sm:px-8 top-(--header-top,--spacing(6)) w-full" style="position:var(--header-inner-position)">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="relative flex gap-4">
<div class="flex flex-1">
<div class="h-10 w-10 rounded-full bg-white/90 p-0.5 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:ring-white/10">
<a aria-label="Home" class="pointer-events-auto" href="/">
<img alt="" fetchPriority="high" width="512" height="512" decoding="async" data-nimg="1" class="rounded-full bg-zinc-100 object-cover dark:bg-zinc-800 h-9 w-9" style="color:transparent" sizes="2.25rem" src="https://www.gravatar.com/avatar/0e976f88026df14e3caf5982df15e64b?s=200&d=identicon">
</a>
</div>
</div>
<div class="flex flex-1 justify-end md:justify-center">
<!-- open menu button -->
<div class="pointer-events-auto md:hidden">
<button id="menuBtn" class="group flex items-center rounded-full bg-white/90 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20" type="button" aria-expanded="false">Menu<svg viewBox="0 0 8 6" aria-hidden="true" class="ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400">
<path d="M1.75 1.75 4 4.25l2.25-2.5" fill="none" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</button>
</div>
<div id="nav" class="hidden pointer-events-auto">
<!-- menu overlay -->
<div class="fixed inset-0 z-50 bg-zinc-800/40 backdrop-blur-xs duration-150 dark:bg-black/80" id="menuOverlay" aria-hidden="true">
</div>
<!-- menu content -->
<div class="fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-white p-8 ring-1 ring-zinc-900/5 duration-150 dark:bg-zinc-900 dark:ring-zinc-800" tabindex="-1" style="--button-width: 88.64999389648438px;">
<div class="flex flex-row-reverse items-center justify-between">
<!-- close menu button -->
<button id="closeBtn" aria-label="Close menu" class="-m-1 p-1" type="button">
<svg viewBox="0 0 24 24" aria-hidden="true" class="h-6 w-6 text-zinc-500 dark:text-zinc-400">
<path d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
</path>
</svg>
</button>
<h2 class="text-sm font-medium text-zinc-600 dark:text-zinc-400">Navigation</h2>
</div>
<nav class="mt-6">
<ul class="-my-2 divide-y divide-zinc-100 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300">
<li>
<a class="block py-2" href="/">Articles</a>
</li>
<li>
<a class="block py-2" href="/about">About</a>
</li>
</ul>
</nav>
</div>
</div>
<script type="module" src="/Users/nathan/code/ncjones/blog/src/components/spotlight/MobileNavigation.astro?astro&type=script&index=0&lang.ts">
</script>
<nav class="pointer-events-auto hidden md:block">
<ul class="flex rounded-full bg-white/90 px-3 text-sm font-medium text-zinc-800 shadow-lg ring-1 shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10">
<li>
<a class="relative block px-3 py-2 transition text-teal-500 dark:text-teal-400" href="/">Articles<span class="absolute inset-x-1 -bottom-px h-px bg-linear-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0">
</span>
</a>
</li>
<li>
<a class="relative block px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-400" href="/about">About </a>
</li>
</ul>
</nav>
</div>
<div class="flex justify-end md:flex-1">
<div class="pointer-events-auto">
<!-- Theme select was here. We will just use the OS preference for choosing dark mode. -->
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</header>
<main class="flex-auto">
<div class="sm:px-8 mt-16 lg:mt-32">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="xl:relative">
<div class="mx-auto max-w-2xl">
<article>
<header class="flex flex-col">
<h1 class="mt-6 text-4xl font-bold tracking-tight text-zinc-800 sm:text-5xl dark:text-zinc-100">Custom Inspect for Node.js UInt Arrays</h1>
<time dateTime="2022-09-02" class="order-first flex items-center text-base text-zinc-400 dark:text-zinc-500">
<span class="h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500">
</span>
<span class="ml-3">
<time datetime="2024-02-25T00:00:00.000Z">February 25, 2024</time>
</span>
</time>
</header>
<div class="mt-8 prose dark:prose-invert" data-mdx-content="true">
<p>The Node.js <a href="https://nodejs.org/docs/latest-v20.x/api/util.html#utilinspectobject-options">util.inspect
function</a>
is what <code>console.log</code> uses internally to format objects. By default, when
inspecting binary data within Uint arrays, we get verbose raw integer values
that are harder to identify at a glance.</p>
<pre class="astro-code rose-pine" style="background-color:#191724;color:#e0def4; overflow-x: auto;" tabindex="0" data-language="js">
<code>
<span class="line">
<span style="color:#31748F">const</span>
<span style="color:#E0DEF4;font-style:italic"> data</span>
<span style="color:#31748F"> =</span>
<span style="color:#908CAA"> {</span>
</span>
<span class="line">
<span style="color:#E0DEF4">  bytes</span>
<span style="color:#908CAA">:</span>
<span style="color:#E0DEF4;font-style:italic"> Uint8Array</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">of</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#EBBCBA">123</span>
<span style="color:#908CAA">,</span>
<span style="color:#EBBCBA"> 45</span>
<span style="color:#908CAA">,</span>
<span style="color:#EBBCBA"> 67</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">,</span>
</span>
<span class="line">
<span style="color:#908CAA">};</span>
</span>
<span class="line">
</span>
<span class="line">
<span style="color:#E0DEF4;font-style:italic">console</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">log</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#E0DEF4;font-style:italic">data</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">;</span>
</span>
</code>
</pre>
<p>The default format for the above inspected Uint8Array will look like the
following:</p>
<pre class="astro-code rose-pine" style="background-color:#191724;color:#e0def4; overflow-x: auto;" tabindex="0" data-language="yaml">
<code>
<span class="line">
<span style="color:#908CAA">{</span>
<span style="color:#9CCFD8"> bytes</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> Uint8Array(3)</span>
<span style="color:#908CAA"> [</span>
<span style="color:#EBBCBA"> 123</span>
<span style="color:#908CAA">,</span>
<span style="color:#EBBCBA"> 45</span>
<span style="color:#908CAA">,</span>
<span style="color:#EBBCBA"> 67</span>
<span style="color:#908CAA"> ]</span>
<span style="color:#908CAA"> }</span>
</span>
</code>
</pre>
<p>By defining a
<a href="https://nodejs.org/docs/latest-v20.x/api/util.html#custom-inspection-functions-on-objects">util.inspect.custom</a>
method on any object, we can customize the display format used when the object
is inspected. The following example shows how the UInt8Array prototype can be
modified to have custom inspect formatting:</p>
<pre class="astro-code rose-pine" style="background-color:#191724;color:#e0def4; overflow-x: auto;" tabindex="0" data-language="js">
<code>
<span class="line">
<span style="color:#31748F">import </span>
<span style="color:#908CAA">{</span>
<span style="color:#E0DEF4;font-style:italic"> inspect</span>
<span style="color:#908CAA"> }</span>
<span style="color:#31748F"> from </span>
<span style="color:#F6C177">'node:util'</span>
<span style="color:#908CAA">;</span>
</span>
<span class="line">
</span>
<span class="line">
<span style="color:#9CCFD8">Uint8Array</span>
<span style="color:#31748F">.</span>
<span style="color:#9CCFD8">prototype</span>
<span style="color:#E0DEF4">[</span>
<span style="color:#E0DEF4;font-style:italic">inspect</span>
<span style="color:#31748F">.</span>
<span style="color:#E0DEF4;font-style:italic">custom</span>
<span style="color:#E0DEF4">] </span>
<span style="color:#31748F">=</span>
<span style="color:#31748F"> function</span>
<span style="color:#908CAA"> ()</span>
<span style="color:#908CAA"> {</span>
</span>
<span class="line">
<span style="color:#31748F">  return</span>
<span style="color:#F6C177"> \`UInt8[0x</span>
<span style="color:#908CAA">\${</span>
<span style="color:#E0DEF4;font-style:italic">Buffer</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">from</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#31748F;font-style:italic">this</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">toString</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#F6C177">'hex'</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">}</span>
<span style="color:#F6C177">]\`</span>
<span style="color:#908CAA">;</span>
</span>
<span class="line">
<span style="color:#908CAA">}</span>
</span>
<span class="line">
</span>
<span class="line">
<span style="color:#31748F">const</span>
<span style="color:#E0DEF4;font-style:italic"> data</span>
<span style="color:#31748F"> =</span>
<span style="color:#908CAA"> {</span>
</span>
<span class="line">
<span style="color:#E0DEF4">  bytes</span>
<span style="color:#908CAA">:</span>
<span style="color:#E0DEF4;font-style:italic"> Uint8Array</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">of</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#EBBCBA">123</span>
<span style="color:#908CAA">,</span>
<span style="color:#EBBCBA"> 45</span>
<span style="color:#908CAA">,</span>
<span style="color:#EBBCBA"> 67</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">,</span>
</span>
<span class="line">
<span style="color:#908CAA">};</span>
</span>
<span class="line">
</span>
<span class="line">
<span style="color:#E0DEF4;font-style:italic">console</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">log</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#E0DEF4;font-style:italic">data</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">;</span>
</span>
</code>
</pre>
<p>The console output from the above example will look like the following:</p>
<pre class="astro-code rose-pine" style="background-color:#191724;color:#e0def4; overflow-x: auto;" tabindex="0" data-language="yaml">
<code>
<span class="line">
<span style="color:#908CAA">{</span>
<span style="color:#9CCFD8"> bytes</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> UInt8</span>
<span style="color:#908CAA">[</span>
<span style="color:#EBBCBA">0x7b2d43</span>
<span style="color:#908CAA">]</span>
<span style="color:#908CAA"> }</span>
</span>
</code>
</pre>
<h2 id="inspecting-algorand-transactions">Inspecting Algorand Transactions</h2>
<p>Algorand addresses are usually presented as base32 encoding. By using base32 as
the default format when inspecting Uint8 arrays we get more compact output and
can spot Algorand sender and receiver addresses.</p>
<pre class="astro-code rose-pine" style="background-color:#191724;color:#e0def4; overflow-x: auto;" tabindex="0" data-language="js">
<code>
<span class="line">
<span style="color:#31748F">import </span>
<span style="color:#908CAA">{</span>
<span style="color:#E0DEF4;font-style:italic"> inspect</span>
<span style="color:#908CAA"> }</span>
<span style="color:#31748F"> from </span>
<span style="color:#F6C177">'node:util'</span>
<span style="color:#908CAA">;</span>
</span>
<span class="line">
<span style="color:#31748F">import </span>
<span style="color:#E0DEF4;font-style:italic">algosdk</span>
<span style="color:#31748F"> from </span>
<span style="color:#F6C177">'algosdk'</span>
<span style="color:#908CAA">;</span>
</span>
<span class="line">
<span style="color:#31748F">import </span>
<span style="color:#E0DEF4;font-style:italic">base32</span>
<span style="color:#31748F"> from </span>
<span style="color:#F6C177">'hi-base32'</span>
<span style="color:#908CAA">;</span>
</span>
<span class="line">
</span>
<span class="line">
<span style="color:#9CCFD8">Uint8Array</span>
<span style="color:#31748F">.</span>
<span style="color:#9CCFD8">prototype</span>
<span style="color:#E0DEF4">[</span>
<span style="color:#E0DEF4;font-style:italic">inspect</span>
<span style="color:#31748F">.</span>
<span style="color:#E0DEF4;font-style:italic">custom</span>
<span style="color:#E0DEF4">] </span>
<span style="color:#31748F">=</span>
<span style="color:#31748F"> function</span>
<span style="color:#908CAA"> ()</span>
<span style="color:#908CAA"> {</span>
</span>
<span class="line">
<span style="color:#31748F">  return</span>
<span style="color:#F6C177"> \`UInt8[</span>
<span style="color:#908CAA">\${</span>
<span style="color:#E0DEF4;font-style:italic">base32</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">encode</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#31748F;font-style:italic">this</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">replaceAll</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#F6C177">'='</span>
<span style="color:#908CAA">,</span>
<span style="color:#F6C177">''</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">}</span>
<span style="color:#F6C177">]\`</span>
<span style="color:#908CAA">;</span>
</span>
<span class="line">
<span style="color:#908CAA">}</span>
</span>
<span class="line">
</span>
<span class="line">
<span style="color:#908CAA;font-style:italic">//</span>
<span style="color:#6E6A86;font-style:italic"> setup algod client, submit transaction</span>
</span>
<span class="line">
<span style="color:#908CAA;font-style:italic">//</span>
<span style="color:#6E6A86;font-style:italic"> see https://developer.algorand.org/docs/sdks/javascript/</span>
</span>
<span class="line">
</span>
<span class="line">
<span style="color:#31748F">const</span>
<span style="color:#E0DEF4;font-style:italic"> txInfo</span>
<span style="color:#31748F"> =</span>
<span style="color:#31748F"> await</span>
<span style="color:#E0DEF4;font-style:italic"> algosdk</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">waitForConfirmation</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#E0DEF4;font-style:italic">algodClient</span>
<span style="color:#908CAA">,</span>
<span style="color:#E0DEF4;font-style:italic"> txId</span>
<span style="color:#908CAA">,</span>
<span style="color:#EBBCBA"> 4</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">;</span>
</span>
<span class="line">
<span style="color:#E0DEF4;font-style:italic">console</span>
<span style="color:#31748F">.</span>
<span style="color:#EBBCBA">log</span>
<span style="color:#E0DEF4">(</span>
<span style="color:#E0DEF4;font-style:italic">txInfo</span>
<span style="color:#E0DEF4">)</span>
<span style="color:#908CAA">;</span>
</span>
</code>
</pre>
<p>Console output for the inspected Algorand transaction will look like the
following:</p>
<pre class="astro-code rose-pine" style="background-color:#191724;color:#e0def4; overflow-x: auto;" tabindex="0" data-language="yaml">
<code>
<span class="line">
<span style="color:#908CAA">{</span>
</span>
<span class="line">
<span style="color:#9CCFD8">  sig</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> UInt8</span>
<span style="color:#908CAA">[</span>
<span style="color:#F6C177">3FMU46ANM2ZLSGJBUMXQRE6LUFMRYEU6ICYF4GFWKMJ2LJ5AF4HUXC7FWXNQGQZXI2EVCLXKG5VE3ATQCVSJ6CYWOMYRVCBPQLKY4AI</span>
<span style="color:#908CAA">],</span>
</span>
<span class="line">
<span style="color:#9CCFD8">  txn</span>
<span style="color:#908CAA">:</span>
<span style="color:#908CAA"> {</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    amt</span>
<span style="color:#908CAA">:</span>
<span style="color:#EBBCBA"> 125</span>
<span style="color:#908CAA">,</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    fee</span>
<span style="color:#908CAA">:</span>
<span style="color:#EBBCBA"> 1000</span>
<span style="color:#908CAA">,</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    fv</span>
<span style="color:#908CAA">:</span>
<span style="color:#EBBCBA"> 28</span>
<span style="color:#908CAA">,</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    gen</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> 'dockernet-v1'</span>
<span style="color:#908CAA">,</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    gh</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> UInt8</span>
<span style="color:#908CAA">[</span>
<span style="color:#F6C177">GPV7SJUAYE7VMR6WNT2DQYKBAZE4I4EOCQUICSKJP5HNGZ3562NQ</span>
<span style="color:#908CAA">],</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    lv</span>
<span style="color:#908CAA">:</span>
<span style="color:#EBBCBA"> 1028</span>
<span style="color:#908CAA">,</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    note</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> UInt8</span>
<span style="color:#908CAA">[</span>
<span style="color:#F6C177">NBSWY3DPEB3W64TMMQ</span>
<span style="color:#908CAA">],</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    rcv</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> UInt8</span>
<span style="color:#908CAA">[</span>
<span style="color:#F6C177">HNVCPPGOW2SC2YQ5BLGEWBG7BCG3TNRDK3DFPLSP4LINK62Z3IUQ</span>
<span style="color:#908CAA">],</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    snd</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> UInt8</span>
<span style="color:#908CAA">[</span>
<span style="color:#F6C177">XJOVAFHGJ5J5QXVDVDICU3YNONSTEFLXDXREHJR2YBEKDCVYWYYA</span>
<span style="color:#908CAA">],</span>
</span>
<span class="line">
<span style="color:#9CCFD8">    type</span>
<span style="color:#908CAA">:</span>
<span style="color:#F6C177"> 'pay'</span>
</span>
<span class="line">
<span style="color:#908CAA">  }</span>
</span>
<span class="line">
<span style="color:#908CAA">}</span>
</span>
</code>
</pre>
</div>
</article>
</div>
</div>
</div>
</div>
</div>
</div>
</main>
<footer class="mt-32 flex-none">
<div class="sm:px-8">
<div class="mx-auto w-full max-w-7xl lg:px-8">
<div class="border-t border-zinc-100 pt-10 pb-16 dark:border-zinc-700/40">
<div class="relative px-4 sm:px-8 lg:px-12">
<div class="mx-auto max-w-2xl lg:max-w-5xl">
<div class="flex flex-col items-center justify-between gap-6 md:flex-row">
<div class="flex flex-wrap justify-center gap-x-6 gap-y-1 text-sm font-medium text-zinc-800 dark:text-zinc-200">
<a class="transition hover:text-teal-500 dark:hover:text-teal-400" href="/">Articles</a>
<a class="transition hover:text-teal-500 dark:hover:text-teal-400" href="/about">About</a>
</div>
<p class="text-sm text-zinc-400 dark:text-zinc-500">Â© 2025 Nathan Jones. All rights reserved.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</footer>
</div>
</div>
</body>
</html>"
`;
